//
//  ___FILENAME___
//  ___PROJECTNAME___
//
//  Created by ___FULLUSERNAME___ on ___DATE___.
//  Copyright (c) ___YEAR___ ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

#import <XCTest/XCTest.h>
#import "___VARIABLE_sceneName___ViewController.h"

#pragma mark Test doubles

@interface ___VARIABLE_sceneName___BusinessLogicSpy: NSObject <___VARIABLE_sceneName___BusinessLogic>

@property (nonatomic) BOOL doSomethingCalled;
- (void)doSomething:(___VARIABLE_sceneName___DoSomethingRequest *)request;

@end

@implementation ___VARIABLE_sceneName___BusinessLogicSpy

- (void)doSomething:(___VARIABLE_sceneName___DoSomethingRequest *)request
{
  self.doSomethingCalled = YES;
}

@end


@interface ___VARIABLE_sceneName___ViewControllerTests: XCTestCase

@property (strong, nonatomic) UIWindow *window;
@property (strong, nonatomic) ___VARIABLE_sceneName___ViewController* sut;

@end

@implementation ___VARIABLE_sceneName___ViewControllerTests

#pragma mark Test lifecycle

- (void)setUp
{
  [super setUp];
  self.window = [[UIWindow alloc] init];
  [self setup___VARIABLE_sceneName___ViewController];
}

- (void)tearDown
{
  self.window = nil;
  [super tearDown];
}

#pragma mark Test setup

- (void)setup___VARIABLE_sceneName___ViewController
{
  NSBundle *bundle = [NSBundle mainBundle];
  UIStoryboard *storyboard = [UIStoryboard storyboardWithName: @"Main" bundle: bundle];
  self.sut = (___VARIABLE_sceneName___ViewController *)[storyboard instantiateViewControllerWithIdentifier: @"___VARIABLE_sceneName___ViewController"];
}

- (void)loadView
{
  [self.window addSubview:self.sut.view];
  [[NSRunLoop currentRunLoop] runUntilDate:[NSDate date]];
}

#pragma mark Tests

- (void)testShouldDoSomethingWhenViewIsLoaded
{
  // Given
  ___VARIABLE_sceneName___BusinessLogicSpy *spy = [[___VARIABLE_sceneName___BusinessLogicSpy alloc] init];
  self.sut.interactor = spy;
  
  // When
  [self loadView];
  
  // Then
  XCTAssertTrue(spy.doSomethingCalled, @"viewDidLoad should ask the interactor to do something");
}

- (void)testDisplaySomething
{
  // Given
  ___VARIABLE_sceneName___DoSomethingViewModel *viewModel = [[___VARIABLE_sceneName___DoSomethingViewModel alloc] init];
  
  // When
  [self loadView];
  [self.sut displaySomething:viewModel];
  
  // Then
  //XCTAssertEqual(self.sut.nameTextField.text, @"", "displaySomething: should update the name text field");
}

@end
