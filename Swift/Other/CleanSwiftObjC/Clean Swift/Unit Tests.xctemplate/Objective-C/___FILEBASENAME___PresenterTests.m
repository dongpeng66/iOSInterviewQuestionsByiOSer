//
//  ___FILENAME___
//  ___PROJECTNAME___
//
//  Created by ___FULLUSERNAME___ on ___DATE___.
//  Copyright (c) ___YEAR___ ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

#import <XCTest/XCTest.h>
#import "___VARIABLE_sceneName___Presenter.h"

#pragma mark Test doubles

@interface ___VARIABLE_sceneName___DisplayLogicSpy: NSObject <___VARIABLE_sceneName___DisplayLogic>

@property (nonatomic) BOOL displaySomethingCalled;
- (void)displaySomething:(___VARIABLE_sceneName___DoSomethingViewModel *)viewModel;

@end

@implementation ___VARIABLE_sceneName___DisplayLogicSpy

- (void)displaySomething:(___VARIABLE_sceneName___DoSomethingViewModel *)viewModel
{
  self.displaySomethingCalled = YES;
}

@end


@interface ___VARIABLE_sceneName___PresenterTests: XCTestCase

@property (strong, nonatomic) ___VARIABLE_sceneName___Presenter* sut;

@end

@implementation ___VARIABLE_sceneName___PresenterTests

#pragma mark Test lifecycle

- (void)setUp
{
  [super setUp];
  [self setup___VARIABLE_sceneName___Presenter];
}

- (void)tearDown
{
  [super tearDown];
}

#pragma mark Test setup

- (void)setup___VARIABLE_sceneName___Presenter
{
  self.sut = [[___VARIABLE_sceneName___Presenter alloc] init];
}

#pragma mark Tests

- (void)testPresentSomething
{
  // Given
  ___VARIABLE_sceneName___DisplayLogicSpy *spy = [[___VARIABLE_sceneName___DisplayLogicSpy alloc] init];
  self.sut.viewController = spy;
  ___VARIABLE_sceneName___DoSomethingResponse *response = [[___VARIABLE_sceneName___DoSomethingResponse alloc] init];
  
  // When
  [self.sut presentSomething:response];
  
  // Then
  XCTAssertTrue(spy.displaySomethingCalled, @"presentSomething: should ask the view controller to display the result");
}

@end
